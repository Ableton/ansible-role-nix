---
- name: Ensure Nix user exists
  become: true
  ansible.builtin.user:
    name: "{{ nix_user }}"
    state: present
  register: nix_user_details

- name: Set fact for XDG user config dir
  ansible.builtin.set_fact:
    xdg_user_config_dir: "{{ lookup('env', 'XDG_CONFIG_HOME') }}"
  when: nix_user == lookup('env', 'USER')

# The lookup module does have a default parameter, but we can't use Jinja2 templates there
- name: Use fallback default for XDG user config dir
  ansible.builtin.set_fact:
    xdg_user_config_dir: "{{ nix_user_details.home }}/.config"
  when: xdg_user_config_dir == ""

- name: Ensure Nix user config dir exists
  become: true
  ansible.builtin.file:
    path: "{{ xdg_user_config_dir }}/nix"
    state: directory
    owner: "{{ nix_user }}"
    mode: "0755"
  register: nix_config_dir

- name: Check if Nix directory exists
  ansible.builtin.stat:
    path: "/nix"
  when: ansible_os_family == "Darwin"
  register: nix_directory_mac

- name: Ensure Nix directory exists
  become: true
  ansible.builtin.file:
    path: "/nix"
    owner: "{{ nix_user }}"
    state: directory
    mode: "0755"
  when: ansible_os_family != "Darwin"
  register: nix_directory

- name: Set should_install_nix fact
  ansible.builtin.set_fact:
    should_install_nix: true
  when: >
    (ansible_os_family != "Darwin" and nix_directory is changed) or
    (ansible_os_family == "Darwin" and not nix_directory_mac.stat.exists)

- name: Create /nix bind mount
  when:
    - ansible_os_family != "Darwin"
    - nix_bind_mount != ""
  block:
    - name: Check if bind mount target directory is present
      ansible.builtin.stat:
        path: "{{ nix_bind_mount }}"
      register: nix_bind_mount_stat

    - name: Create bind mount target directory
      become: true
      ansible.builtin.file:
        path: "{{ nix_bind_mount }}"
        owner: "{{ nix_user }}"
        state: directory
        mode: "0755"
      when: not nix_bind_mount_stat.stat.exists  # noqa: no-handler

    - name: "Bind mount /nix to {{ nix_bind_mount }}"
      become: true
      ansible.posix.mount:
        path: "/nix"
        src: "{{ nix_bind_mount }}"
        opts: bind
        state: mounted
        fstype: none

- name: Install Nix
  when: should_install_nix  # noqa no-handler
  block:
    - name: Download installer script
      ansible.builtin.get_url:
        url: "https://nixos.org/nix/install"
        dest: "{{ nix_script_dir }}/install_nix.sh"
        mode: "0755"

    - name: Run installer script
      become: true
      become_user: "{{ nix_user }}"
      ansible.builtin.command: "{{ nix_script_dir }}/install_nix.sh"
      changed_when: true

- name: Set up Nix Flakes
  when: nix_flakes  # noqa no-handler
  block:
    - name: See if Nix configuration file exists
      ansible.builtin.stat:
        path: "{{ nix_config_dir.path }}/nix.conf"
      register: nix_config_file

    - name: Slurp config file contents
      ansible.builtin.slurp:
        path: "{{ nix_config_dir.path }}/nix.conf"
      register: nix_config_file_contents
      when: nix_config_file.stat.exists

    - name: Install Nix stable package
      become: true
      become_flags: "--login"
      become_user: "{{ nix_user }}"
      # We need to use shell instead of command because of the above --login flag, since
      # nix-env isn't in the default path.
      # noqa command-instead-of-shell
      ansible.builtin.shell: "nix-env -iA nixpkgs.nixVersions.stable"
      changed_when: true
      environment:
        PATH: "{{ nix_user_details.home }}/.nix-profile/bin:{{ lookup('env', 'PATH') }}"
      when: >
        not nix_config_file.stat.exists
        or "nix-command flakes" not in nix_config_file_contents.content | b64decode

    - name: Enable Nix Flakes
      become: true
      become_user: "{{ nix_user }}"
      # Even though we are only adding a single line, we use blockinfile so we get
      # Ansible's markers to indicate it's a machine-managed file.
      ansible.builtin.blockinfile:
        path: "{{ nix_config_dir.path }}/nix.conf"
        block: "experimental-features = nix-command flakes"
        insertafter: EOF
        owner: "{{ nix_user }}"
        mode: "0644"
        create: true
        state: present
